{"version":3,"file":"wasm-loader.bundle.js","mappings":"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","sources":["webpack://Greenova/webpack/universalModuleDefinition","webpack://Greenova/webpack/bootstrap","webpack://Greenova/webpack/runtime/define property getters","webpack://Greenova/webpack/runtime/hasOwnProperty shorthand","webpack://Greenova/webpack/runtime/make namespace object","webpack://Greenova/./greenova/static/ts/src/utils/wasm-loader.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Greenova\"] = factory();\n\telse\n\t\troot[\"Greenova\"] = root[\"Greenova\"] || {}, root[\"Greenova\"][\"wasm-loader\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WebAssembly Module Loader\n *\n * This utility handles loading and initializing the AssemblyScript WASM module\n * and provides a typed interface for interacting with it.\n */\n\n/**\n * Interface for the WASM module exports\n */\nexport interface GreenovaWasmModule {\n  memory: WebAssembly.Memory;\n  getTheme: () => number;\n  setTheme: (theme: number) => void;\n  resolveTheme: (systemPrefersDark: number) => number;\n  THEME_LIGHT: number;\n  THEME_DARK: number;\n  THEME_AUTO: number;\n  getLastErrorCode: () => number;\n  getLastErrorDetails: () => number;\n  recordError: (code: number, details: number) => void;\n  clearError: () => void;\n  ERROR_NONE: number;\n  ERROR_GENERAL: number;\n  ERROR_THEME: number;\n  ERROR_ANIMATION: number;\n  linearEasing: (current: number, duration: number) => number;\n  easeInOutEasing: (current: number, duration: number) => number;\n  calculateAnimationHeight: (\n    isExpanding: boolean,\n    progress: number,\n    startHeight: number,\n    endHeight: number\n  ) => number;\n}\n\n/**\n * Implementation of a fallback module when WASM is not available\n */\nclass FallbackWasmModule implements GreenovaWasmModule {\n  memory: WebAssembly.Memory;\n  THEME_LIGHT = 0;\n  THEME_DARK = 1;\n  THEME_AUTO = 2;\n  ERROR_NONE = 0;\n  ERROR_GENERAL = 1;\n  ERROR_THEME = 2;\n  ERROR_ANIMATION = 3;\n\n  constructor() {\n    this.memory = new WebAssembly.Memory({ initial: 1 });\n  }\n\n  getTheme(): number {\n    return 0;\n  }\n  setTheme(): void {\n    /* no-op */\n  }\n  resolveTheme(systemPrefersDark: number): number {\n    return systemPrefersDark ? 1 : 0;\n  }\n  getLastErrorCode(): number {\n    return 0;\n  }\n  getLastErrorDetails(): number {\n    return 0;\n  }\n  recordError(): void {\n    /* no-op */\n  }\n  clearError(): void {\n    /* no-op */\n  }\n  linearEasing(current: number, duration: number): number {\n    return current / duration;\n  }\n  easeInOutEasing(current: number, duration: number): number {\n    return current / duration;\n  }\n  calculateAnimationHeight(): number {\n    return 0;\n  }\n}\n\n/**\n * Initialize the WebAssembly module with proper fallback\n */\nexport async function initializeWasmModule(): Promise<GreenovaWasmModule> {\n  if (!isWasmSupported()) {\n    console.warn('WebAssembly is not supported, using fallback module');\n    return new FallbackWasmModule();\n  }\n\n  try {\n    const wasmPath = new URL(\n      '/static/as/build/optimized.wasm',\n      window.location.origin\n    ).href;\n    const response = await fetchWithRetry(wasmPath);\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch WASM module: ${response.statusText}`);\n    }\n\n    const buffer = await response.arrayBuffer();\n    if (!buffer) {\n      throw new Error('Empty WASM buffer received');\n    }\n\n    const memory = new WebAssembly.Memory({\n      initial: 2,\n      maximum: 10,\n    });\n\n    const { instance } = await WebAssembly.instantiate(buffer, {\n      env: {\n        memory,\n        abort: (\n          message: number,\n          fileName: number,\n          lineNumber: number,\n          columnNumber: number\n        ) => {\n          console.error('WASM module aborted:', {\n            message,\n            fileName,\n            lineNumber,\n            columnNumber,\n          });\n          throw new Error('WASM module aborted');\n        },\n      },\n    });\n\n    if (!instance?.exports) {\n      throw new Error('WASM instance exports not found');\n    }\n\n    return instance.exports as unknown as GreenovaWasmModule;\n  } catch (error) {\n    console.error('WASM initialization failed:', error);\n    console.warn('Falling back to JavaScript implementation');\n    return new FallbackWasmModule();\n  }\n}\n\n/**\n * Fetch with retry logic\n */\nasync function fetchWithRetry(\n  url: string,\n  retries = 3,\n  backoff = 1000\n): Promise<Response> {\n  let lastError: Error | undefined;\n\n  for (let i = 0; i < retries; i++) {\n    try {\n      return await fetch(url);\n    } catch (error) {\n      lastError = error as Error;\n      if (i === retries - 1) break;\n      await new Promise((resolve) => setTimeout(resolve, backoff * (i + 1)));\n    }\n  }\n\n  throw lastError || new Error('Failed to fetch after retries');\n}\n\n/**\n * Check if WebAssembly is supported in the current browser\n */\nfunction isWasmSupported(): boolean {\n  try {\n    if (typeof WebAssembly !== 'object') return false;\n\n    // Check if required WebAssembly functions exist and are callable\n    if (typeof WebAssembly.instantiate !== 'function') return false;\n    if (typeof WebAssembly.Memory !== 'function') return false;\n    if (typeof WebAssembly.compile !== 'function') return false;\n    if (typeof WebAssembly.Instance !== 'function') return false;\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","FallbackWasmModule","constructor","THEME_LIGHT","THEME_DARK","THEME_AUTO","ERROR_NONE","ERROR_GENERAL","ERROR_THEME","ERROR_ANIMATION","this","memory","WebAssembly","Memory","initial","getTheme","setTheme","resolveTheme","systemPrefersDark","getLastErrorCode","getLastErrorDetails","recordError","clearError","linearEasing","current","duration","easeInOutEasing","calculateAnimationHeight","initializeWasmModule","instantiate","compile","Instance","isWasmSupported","console","warn","wasmPath","URL","window","location","origin","href","response","url","retries","backoff","lastError","i","fetch","error","Promise","resolve","setTimeout","Error","fetchWithRetry","ok","statusText","buffer","arrayBuffer","maximum","instance","env","abort","message","fileName","lineNumber","columnNumber"],"sourceRoot":""}
