{"version":3,"file":"app-modules.bundle.js","mappings":"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","sources":["webpack://Greenova/webpack/universalModuleDefinition","webpack://Greenova/webpack/bootstrap","webpack://Greenova/webpack/runtime/define property getters","webpack://Greenova/webpack/runtime/hasOwnProperty shorthand","webpack://Greenova/webpack/runtime/make namespace object","webpack://Greenova/./greenova/static/ts/src/modules/app-modules.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Greenova\"] = factory();\n\telse\n\t\troot[\"Greenova\"] = root[\"Greenova\"] || {}, root[\"Greenova\"][\"app-modules\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Greenova Application Modules\n *\n * TypeScript implementation of the original JavaScript modules from app.js.\n * This class provides the structure for all the application modules.\n */\n\nimport { GreenovaWasmModule } from '../utils/wasm-loader';\n\n// Module interfaces\ninterface ModuleInterface {\n  init(): void;\n  [key: string]: any;\n}\n\n/**\n * Core utilities module\n */\nclass CoreModule implements ModuleInterface {\n  setupGlobalEventListeners(): void {\n    // Handle flash messages with auto-dismiss\n    const flashMessages = document.querySelectorAll(\n      '.message[data-auto-dismiss]'\n    );\n    flashMessages.forEach((message) => {\n      setTimeout(() => {\n        if (message instanceof HTMLElement && message.setAttribute) {\n          message.setAttribute(\n            'classes',\n            'add fade-out:0s, remove message:1s'\n          );\n        }\n      }, 5000); // 5 second delay before starting fade-out\n    });\n  }\n\n  loadStylesheet(href: string, id?: string): void {\n    const link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = href;\n    if (id) {\n      link.id = id;\n    }\n    document.head.appendChild(link);\n  }\n\n  init(): void {\n    // Initialize only if browser supports essential features\n    if (!document.querySelector || !window.addEventListener) {\n      console.warn('Browser unsupported, skipping JS initialization');\n      return;\n    }\n\n    // Verify htmx is loaded\n    if (typeof window.htmx === 'undefined') {\n      console.warn('HTMX not loaded');\n    } else {\n      console.log('HTMX loaded successfully');\n    }\n\n    // Set up global event listeners\n    this.setupGlobalEventListeners();\n  }\n}\n\n/**\n * Projects module\n */\nclass ProjectsModule implements ModuleInterface {\n  init(): void {\n    // Handle project selection changes\n    document.addEventListener('change', (e: Event) => {\n      const target = e.target as HTMLSelectElement;\n      if (target && target.matches('#project-select')) {\n        this.handleProjectChange(target.value);\n      }\n    });\n\n    // Restore project selection when returning from another page\n    this.restoreProjectSelection();\n\n    // Update Add Obligation button to include the current project_id\n    this.updateAddObligationButton();\n  }\n\n  handleProjectChange(projectId: string): void {\n    // Store the selection in session storage\n    if (projectId) {\n      sessionStorage.setItem('lastProjectId', projectId);\n    }\n\n    // Trigger updates for data containers\n    if (window.htmx) {\n      window.htmx.trigger('#chart-container', 'refreshCharts');\n      window.htmx.trigger('#obligations-container', 'refreshObligations');\n    }\n\n    // Update the Add Obligation button URL\n    this.updateAddObligationButton();\n  }\n\n  restoreProjectSelection(): void {\n    const projectSelect = document.getElementById(\n      'project-select'\n    ) as HTMLSelectElement;\n    const lastProjectId = sessionStorage.getItem('lastProjectId');\n\n    if (projectSelect && lastProjectId) {\n      projectSelect.value = lastProjectId;\n      // Trigger change event to update dependent components\n      projectSelect.dispatchEvent(new Event('change'));\n    }\n  }\n\n  updateAddObligationButton(): void {\n    const projectSelect = document.getElementById(\n      'project-select'\n    ) as HTMLSelectElement;\n    const addObligationBtn = document.querySelector(\n      '.add-obligation-btn'\n    ) as HTMLAnchorElement;\n\n    if (projectSelect && addObligationBtn) {\n      const projectId = projectSelect.value;\n      if (projectId) {\n        const currentHref = addObligationBtn.getAttribute('href') || '';\n        const baseUrl = currentHref.split('?')[0];\n        addObligationBtn.setAttribute(\n          'href',\n          `${baseUrl}?project_id=${projectId}`\n        );\n      }\n    }\n  }\n}\n\n/**\n * Charts module\n */\nclass ChartsModule implements ModuleInterface {\n  init(): void {\n    // Set up chart scrolling functionality\n    document.addEventListener('htmx:afterSettle', () => {\n      const chartScroll = document.getElementById('chartScroll');\n      if (chartScroll) {\n        this.setupChartNavigation(chartScroll);\n      }\n    });\n  }\n\n  setupChartNavigation(container: HTMLElement): void {\n    // Add keyboard navigation\n    container.addEventListener('keydown', (e: KeyboardEvent) => {\n      if (e.key === 'ArrowLeft') {\n        e.preventDefault();\n        this.scrollCharts(container, 'left');\n      } else if (e.key === 'ArrowRight') {\n        e.preventDefault();\n        this.scrollCharts(container, 'right');\n      }\n    });\n  }\n\n  scrollCharts(container: HTMLElement, direction: 'left' | 'right'): void {\n    if (!container) return;\n\n    const scrollAmount = 320;\n    container.scrollBy({\n      left: direction === 'left' ? -scrollAmount : scrollAmount,\n      behavior: 'smooth',\n    });\n  }\n}\n\n/**\n * Tables module\n */\nclass TablesModule implements ModuleInterface {\n  init(): void {\n    // Initial setup of table scrolling\n    this.setupTableScrolling();\n\n    // Listen for new content that may contain tables\n    document.addEventListener('htmx:afterSettle', () =>\n      this.setupTableScrolling()\n    );\n  }\n\n  setupTableScrolling(): void {\n    const tableContainers = document.querySelectorAll('.table-container');\n    tableContainers.forEach((container) => {\n      const scrollArea = container.querySelector(\n        '.horizontal-scroll'\n      ) as HTMLElement;\n      const scrollIndicator = container.querySelector(\n        '.scroll-indicator'\n      ) as HTMLElement;\n\n      // Create scroll indicator if it doesn't exist\n      if (scrollArea && !scrollIndicator) {\n        const indicator = document.createElement('div');\n        indicator.className = 'scroll-indicator';\n\n        const thumb = document.createElement('div');\n        thumb.className = 'scroll-thumb';\n        indicator.appendChild(thumb);\n\n        container.appendChild(indicator);\n\n        // Update scroll indicator on scroll\n        scrollArea.addEventListener('scroll', () =>\n          this.updateScrollIndicator(scrollArea, thumb)\n        );\n\n        // Initial update\n        this.updateScrollIndicator(scrollArea, thumb);\n      }\n    });\n  }\n\n  updateScrollIndicator(scrollArea: HTMLElement, thumb: HTMLElement): void {\n    if (!scrollArea || !thumb) return;\n\n    // Calculate thumb width and position\n    const scrollWidth = scrollArea.scrollWidth;\n    const viewportWidth = scrollArea.clientWidth;\n    const scrollLeft = scrollArea.scrollLeft;\n\n    const thumbWidth = (viewportWidth / scrollWidth) * 100;\n    const thumbPosition =\n      (scrollLeft / (scrollWidth - viewportWidth)) * (100 - thumbWidth);\n\n    // Update thumb style\n    thumb.style.width = `${thumbWidth}%`;\n    thumb.style.marginLeft = `${thumbPosition}%`;\n  }\n\n  exportToCSV(table: HTMLTableElement, filename: string): void {\n    if (!table) return;\n\n    // Extract headers\n    const rows = Array.from(table.querySelectorAll('tr'));\n    const headers = Array.from(rows[0].querySelectorAll('th')).map(\n      (cell) => `\"${cell.textContent?.trim().replace(/\"/g, '\"\"') || ''}\"`\n    );\n\n    // Extract data rows\n    const data = rows.slice(1).map((row) => {\n      return Array.from(row.querySelectorAll('td')).map(\n        (cell) => `\"${cell.textContent?.trim().replace(/\"/g, '\"\"') || ''}\"`\n      );\n    });\n\n    // Combine headers and data\n    const csvContent = [\n      headers.join(','),\n      ...data.map((row) => row.join(',')),\n    ].join('\\n');\n\n    // Create download link\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.display = 'none';\n\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n\n/**\n * HTMX handlers module\n */\nclass HtmxHandlersModule implements ModuleInterface {\n  init(): void {\n    // Set up HTMX event handlers if HTMX is available\n    if (typeof window.htmx === 'undefined') return;\n\n    // Setup loading states\n    document.body.addEventListener('htmx:beforeRequest', (e: Event) => {\n      const htmxEvent = e as CustomEvent;\n      const target = htmxEvent.detail.target as HTMLElement;\n      if (target.matches('#obligations-container, #chart-container')) {\n        target.innerHTML =\n          '<div class=\"notice\" role=\"status\" aria-busy=\"true\">Loading...</div>';\n      }\n    });\n\n    // Handle HTMX response errors\n    document.body.addEventListener('htmx:responseError', (e: Event) => {\n      const htmxEvent = e as CustomEvent;\n      const target = htmxEvent.detail.target as HTMLElement;\n      target.innerHTML = `\n        <div class=\"notice error\" role=\"alert\">\n          <p>Error loading data. Please try again.</p>\n        </div>\n      `;\n    });\n\n    // Handle obligation status changes\n    document.addEventListener('htmx:afterSettle', (e: Event) => {\n      const htmxEvent = e as CustomEvent;\n      if (\n        htmxEvent.detail.triggerSpec &&\n        htmxEvent.detail.triggerSpec.includes('obligation:statusChanged')\n      ) {\n        window.htmx.trigger('#chart-container', 'refreshCharts');\n      }\n    });\n\n    // Add entrance animations to newly swapped content\n    document.body.addEventListener('htmx:afterSwap', (e: Event) => {\n      const htmxEvent = e as CustomEvent;\n      const target = htmxEvent.detail.target as HTMLElement;\n      if (target.hasAttribute('data-animate-entrance')) {\n        target.setAttribute('classes', 'add fade-in');\n      }\n    });\n\n    // Integration with PathDeps extension\n    if (typeof window.PathDeps !== 'undefined') {\n      document.body.addEventListener('htmx:afterRequest', (e: Event) => {\n        const htmxEvent = e as CustomEvent;\n\n        // Only handle successful POST/PUT/DELETE requests (mutations)\n        if (\n          !htmxEvent.detail.successful ||\n          htmxEvent.detail.xhr.method === 'GET'\n        )\n          return;\n\n        const path = htmxEvent.detail.requestConfig.path;\n        if (path && path.includes('/obligations/')) {\n          // Manually refresh related components\n          if (window.PathDeps) {\n            window.PathDeps.refresh('/obligations/');\n            window.PathDeps.refresh('/mechanisms/charts/');\n            window.PathDeps.refresh('/dashboard/overdue-count/');\n          }\n        }\n      });\n    }\n  }\n}\n\n/**\n * Forms module\n */\nclass FormsModule implements ModuleInterface {\n  init(): void {\n    // Handle filter form submission\n    document.addEventListener('submit', (e: Event) => {\n      const target = e.target as HTMLFormElement;\n      if (target.matches('#obligations-filter-form')) {\n        e.preventDefault();\n        this.handleFilterFormSubmit(target);\n      }\n    });\n\n    // Set up filter removal handlers\n    document.addEventListener('click', (e: Event) => {\n      const target = e.target as HTMLElement;\n      if (target.matches('.remove-filter')) {\n        e.preventDefault();\n        const type = target.getAttribute('data-filter-type');\n        const value = target.getAttribute('data-filter-value');\n        if (type && value) {\n          this.removeFilter(type, value);\n        }\n      }\n    });\n  }\n\n  handleFilterFormSubmit(form: HTMLFormElement): void {\n    // Update UI elements related to filtering\n    const filterCount = document.getElementById('filter-count');\n    if (filterCount) {\n      const activeFilters = Array.from(\n        form.querySelectorAll('select, input[type=\"text\"]')\n      ).filter((el) => {\n        const element = el as HTMLInputElement | HTMLSelectElement;\n        return element.value && element.value !== '';\n      }).length;\n\n      filterCount.textContent = activeFilters.toString();\n      filterCount.hidden = activeFilters === 0;\n    }\n  }\n\n  removeFilter(type: string, value: string): void {\n    const select = document.querySelector(\n      `select[name=\"${type}\"]`\n    ) as HTMLSelectElement;\n    if (select) {\n      Array.from(select.options).forEach((option) => {\n        if (option.value === value) {\n          option.selected = false;\n        }\n      });\n      select.dispatchEvent(new Event('change'));\n    }\n  }\n}\n\n/**\n * Document actions module\n */\nclass DocumentActionsModule implements ModuleInterface {\n  init(): void {\n    // Handle print button clicks\n    document.addEventListener('click', (e: Event) => {\n      const target = e.target as HTMLElement;\n      if (target.matches('#print-obligations')) {\n        e.preventDefault();\n        window.print();\n      }\n    });\n\n    // Handle export button clicks\n    document.addEventListener('click', (e: Event) => {\n      const target = e.target as HTMLElement;\n      if (target.matches('#export-obligations')) {\n        e.preventDefault();\n        const table = document.querySelector('table') as HTMLTableElement;\n        if (table) {\n          const tablesModule = new TablesModule();\n          tablesModule.exportToCSV(table, 'obligations_export.csv');\n        }\n      }\n    });\n\n    // Handle obligation link clicks\n    document.addEventListener('click', (e: Event) => {\n      const target = e.target as HTMLElement;\n      if (\n        target.matches('.obligation-link') ||\n        target.closest('.obligation-link')\n      ) {\n        // Show loading indicator\n        document.body.classList.add('loading');\n\n        // Store the current project ID in session storage\n        const projectId = document.querySelector<HTMLInputElement>(\n          'input[name=\"project_id\"]'\n        )?.value;\n        if (projectId) {\n          sessionStorage.setItem('lastProjectId', projectId);\n        }\n      }\n    });\n  }\n}\n\n/**\n * AppModules class that contains all application modules\n */\nexport class AppModules {\n  // Core is a special module imported directly\n  core: CoreModule;\n  projects: ProjectsModule;\n  charts: ChartsModule;\n  tables: TablesModule;\n  htmxHandlers: HtmxHandlersModule;\n  forms: FormsModule;\n  documentActions: DocumentActionsModule;\n  [key: string]: any;\n\n  constructor() {\n    this.core = new CoreModule();\n    this.projects = new ProjectsModule();\n    this.charts = new ChartsModule();\n    this.tables = new TablesModule();\n    this.htmxHandlers = new HtmxHandlersModule();\n    this.forms = new FormsModule();\n    this.documentActions = new DocumentActionsModule();\n  }\n}\n\n// Augment global Window interface to include HTMX and PathDeps for TypeScript\ndeclare global {\n  interface Window {\n    htmx: any;\n    PathDeps?: {\n      refresh: (path: string) => void;\n    };\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","CoreModule","setupGlobalEventListeners","document","querySelectorAll","forEach","message","setTimeout","HTMLElement","setAttribute","loadStylesheet","href","id","link","createElement","rel","head","appendChild","init","querySelector","window","addEventListener","htmx","console","warn","log","this","ProjectsModule","e","target","matches","handleProjectChange","restoreProjectSelection","updateAddObligationButton","projectId","sessionStorage","setItem","trigger","projectSelect","getElementById","lastProjectId","getItem","dispatchEvent","Event","addObligationBtn","baseUrl","getAttribute","split","ChartsModule","chartScroll","setupChartNavigation","container","preventDefault","scrollCharts","direction","scrollBy","left","behavior","TablesModule","setupTableScrolling","scrollArea","scrollIndicator","indicator","className","thumb","updateScrollIndicator","scrollWidth","viewportWidth","clientWidth","thumbWidth","thumbPosition","scrollLeft","style","width","marginLeft","exportToCSV","table","filename","rows","Array","from","headers","map","cell","textContent","trim","replace","data","slice","row","csvContent","join","blob","Blob","type","url","URL","createObjectURL","display","body","click","removeChild","HtmxHandlersModule","detail","innerHTML","htmxEvent","triggerSpec","includes","hasAttribute","PathDeps","successful","xhr","method","path","requestConfig","refresh","FormsModule","handleFilterFormSubmit","removeFilter","form","filterCount","activeFilters","filter","el","element","length","toString","hidden","select","options","option","selected","DocumentActionsModule","print","closest","classList","add","AppModules","constructor","core","projects","charts","tables","htmxHandlers","forms","documentActions"],"sourceRoot":""}
